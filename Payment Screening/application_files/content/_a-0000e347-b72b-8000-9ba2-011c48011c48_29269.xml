<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<contentHaul xmlns:a="http://www.appian.com/ae/types/2009">
    <versionUuid>_a-0000e347-b72b-8000-9ba2-011c48011c48_29281</versionUuid>
    <rule>
        <name>CICD_testInterface2</name>
        <uuid>_a-0000e347-b72b-8000-9ba2-011c48011c48_29269</uuid>
        <description>Test Interface 2</description>
        <parentUuid>_a-0000e311-1855-8000-9ba2-011c48011c48_29123</parentUuid>
        <visibility>
            <advertise>false</advertise>
            <hierarchy>true</hierarchy>
            <indexable>true</indexable>
            <quota>false</quota>
            <searchable>true</searchable>
            <system>false</system>
            <unlogged>false</unlogged>
        </visibility>
        <definition>/* Note: Many of the casting functions in this template, such as tointeger() or tostring(), would not be    *
 * necessary if these variables were CDT values coming from queries. Since the sample data here is provided *
 * through hard-coded dictionaries, the data fields are not strongly typed and must be cast more often.     */
a!localVariables(
  local!addingAddress: false,
  local!newAddress: {id: null, shippingAddress: "", unit: null, city: "", stateOrProvince: "", zipCode: null},
  /* Normally, these variables would be lists of CDTs sourced from a query like rule!getAllDepartments().   *
   * The label or title field of the CDT would be used in choiceLabel parameters, and either the whole CDT  *
   * or the id would be used in choiceValues parameters.                                                    */
  local!departments: {"Finance", "Human Resources", "Marketing", "Sales", "IT"},
  local!categories: {"Hardware", "Software", "Office Supplies", "Miscellaneous"},
  local!addresses: {
    {id: 1, shippingAddress: "123 Main St",        unit: "",     city: "Springfield", stateOrProvince: "AL", zipCode: "36784"},
    {id: 2, shippingAddress: "62201 Oak Blvd",     unit: "",     city: "Phoenix",     stateOrProvince: "AZ", zipCode: "85032"},
    {id: 3, shippingAddress: "872 Park Ave",       unit: "179",  city: "Milwaukee",   stateOrProvince: "WI", zipCode: "53201"},
    {id: 4, shippingAddress: "11955 Democracy Dr", unit: "1700", city: "Reston",      stateOrProvince: "VA", zipCode: "20190"}
  },
  #"SYSTEM_SYSRULES_formLayout_v1"(
    label: "New Purchase Request",
    contents: {
      #"SYSTEM_SYSRULES_sectionLayout_v1"(
        contents: {
          #"SYSTEM_SYSRULES_columnsLayout"(
            columns: {
              #"SYSTEM_SYSRULES_columnLayout"(
                contents: {
                  #"SYSTEM_SYSRULES_pickerFieldUsers"(
                    label: "Requested By",
                    value: ri!purchaseRequest.requestedBy,
                    saveInto: ri!purchaseRequest.requestedBy,
                    required: true,
                    validationGroup: "main"
                  ),
                  #"SYSTEM_SYSRULES_sideBySideLayout"(
                    items: {
                      #"SYSTEM_SYSRULES_sideBySideItem"(
                        item: #"SYSTEM_SYSRULES_dropdownField"(
                          label: "Department",
                          placeholderLabel: "--- Select Department ---",
                          choiceLabels: local!departments,
                          choiceValues: local!departments,
                          value: ri!purchaseRequest.department,
                          saveInto: ri!purchaseRequest.department,
                          required: true,
                          validationGroup: "main"
                        )
                      ),
                      #"SYSTEM_SYSRULES_sideBySideItem"(
                        item: #"SYSTEM_SYSRULES_dateField"(
                          label: "Due Date",
                          value: ri!purchaseRequest.dueDate,
                          saveInto: ri!purchaseRequest.dueDate,
                          required: true,
                          validations: {if(
                            todate(ri!purchaseRequest.dueDate) &lt; today(),
                            "Past dates not allowed",
                            ""
                          )},
                          validationGroup: "main"
                        ),
                        width: "MINIMIZE"
                      )
                    }
                  ),
                  #"SYSTEM_SYSRULES_textField"(
                    label: "Special Instructions",
                    value: ri!purchaseRequest.specialInstructions,
                    saveInto: ri!purchaseRequest.specialInstructions,
                    validations: {if(
                      len(ri!purchaseRequest.specialInstructions) =&gt; 255,
                      "Instructions must be less than 255 characters",
                      ""
                    )},
                    validationGroup: "main"
                  )
                }
              ),
              #"SYSTEM_SYSRULES_columnLayout"(
                contents: {
                  #"SYSTEM_SYSRULES_radioButtonField"(
                    label: "Shipping Address",
                    choiceLabels: #"SYSTEM_SYSRULES_forEach"(
                      items: local!addresses,
                      expression: concat(
                        fv!item.shippingAddress,
                        if(isnull(fv!item.unit), "", " Unit #" &amp; fv!item.unit),
                        ", ",
                        fv!item.city,
                        ", ",
                        fv!item.stateOrProvince,
                        " ",
                        fv!item.zipCode
                      )
                    ),
                    choiceValues: local!addresses,
                    value: ri!purchaseRequest.address,
                    saveInto: ri!purchaseRequest.address,
                    showWhen: not(local!addingAddress)
                  ),
                  #"SYSTEM_SYSRULES_richTextDisplayField"(
                    labelPosition: "COLLAPSED",
                    value: {
                      #"SYSTEM_SYSRULES_richTextIcon"(
                        icon: "plus-circle",
                        link: #"SYSTEM_SYSRULES_dynamicLink"(saveInto: a!save(local!addingAddress, true)),
                        linkStyle: "STANDALONE"
                      ),
                      " ",
                      #"SYSTEM_SYSRULES_richTextItem_v1"(
                        text: "Add New Address",
                        link: #"SYSTEM_SYSRULES_dynamicLink"(saveInto: a!save(local!addingAddress, true)),
                        linkStyle: "STANDALONE"
                      )
                    },
                    showWhen: not(local!addingAddress)
                  ),
                  #"SYSTEM_SYSRULES_boxLayout"(
                    label: "Add New Address",
                    contents: {
                      #"SYSTEM_SYSRULES_sideBySideLayout"(
                        items: {
                          #"SYSTEM_SYSRULES_sideBySideItem"(
                            item: #"SYSTEM_SYSRULES_textField"(
                              label: "Shipping Address",
                              value: local!newAddress.shippingAddress,
                              saveInto: local!newAddress.shippingAddress,
                              refreshAfter: "UNFOCUS",
                              required: true,
                              validationGroup: "address"
                            ),
                            width: "3X"
                          ),
                          #"SYSTEM_SYSRULES_sideBySideItem"(
                            item: #"SYSTEM_SYSRULES_textField"(
                              label: "Unit #",
                              value: local!newAddress.unit,
                              saveInto: local!newAddress.unit
                            )
                          )
                        }
                      ),
                      #"SYSTEM_SYSRULES_sideBySideLayout"(
                        items: {
                          #"SYSTEM_SYSRULES_sideBySideItem"(
                            item: #"SYSTEM_SYSRULES_textField"(
                              label: "City",
                              value: local!newAddress.city,
                              saveInto: local!newAddress.city,
                              required: true,
                              validationGroup: "address"
                            ),
                            width: "2X"
                          ),
                          #"SYSTEM_SYSRULES_sideBySideItem"(
                            item: #"SYSTEM_SYSRULES_textField"(
                              label: "State/Province",
                              value: local!newAddress.stateOrProvince,
                              saveInto: local!newAddress.stateOrProvince,
                              required: true,
                              validationGroup: "address"
                            ),
                            width: "1X"
                          ),
                          #"SYSTEM_SYSRULES_sideBySideItem"(
                            item: #"SYSTEM_SYSRULES_textField"(
                              label: "Zip/Postal Code",
                              value: local!newAddress.zipCode,
                              saveInto: local!newAddress.zipCode,
                              required: true,
                              validationGroup: "address"
                            ),
                            width: "1X"
                          )
                        }
                      ),
                      #"SYSTEM_SYSRULES_ButtonLayout"(
                        primaryButtons: {
                          #"SYSTEM_SYSRULES_ButtonWidget"(
                            label: "Add",
                            saveInto: {
                              /* Add this address to the addresses list */
                              a!save(local!addresses, append(local!addresses, local!newAddress)),
                              /* Set the new address to be selected */
                              a!save(ri!purchaseRequest.address, local!newAddress),
                              /* Clear out the form in the box for next use */
                              a!save(local!newAddress, {id: null, shippingAddress: "", unit: null, city: "", stateOrProvince: "", zipCode: null}),
                              a!save(local!addingAddress, false)
                            },
                            size: "SMALL",
                            style: "PRIMARY",
                            validate: true,
                            validationGroup: "address"
                          )
                        },
                        secondaryButtons: {
                          #"SYSTEM_SYSRULES_ButtonWidget"(
                            label: "Cancel",
                            saveInto: a!save(local!addingAddress, false),
                            size: "SMALL",
                            style: "NORMAL"
                          )
                        }
                      )
                    },
                    showWhen: local!addingAddress,
                    style: "ACCENT"
                  )
                }
              )
            }
          )
        }
      ),
      #"SYSTEM_SYSRULES_gridLayout"(
        label: "Items",
        headerCells: {
          #"SYSTEM_SYSRULES_gridLayoutHeaderCell"(label: "Description"),
          #"SYSTEM_SYSRULES_gridLayoutHeaderCell"(label: "Category"),
          #"SYSTEM_SYSRULES_gridLayoutHeaderCell"(label: "Qty", align: "RIGHT"),
          #"SYSTEM_SYSRULES_gridLayoutHeaderCell"(label: "Unit Price", align: "RIGHT"),
          #"SYSTEM_SYSRULES_gridLayoutHeaderCell"(label: "Amount", align: "RIGHT"),
          #"SYSTEM_SYSRULES_gridLayoutHeaderCell"(label: "")
        },
        columnConfigs: {
          #"SYSTEM_SYSRULES_gridLayoutColumnConfig"(width: "DISTRIBUTE", weight: 3),
          #"SYSTEM_SYSRULES_gridLayoutColumnConfig"(width: "DISTRIBUTE", weight: 3),
          #"SYSTEM_SYSRULES_gridLayoutColumnConfig"(width: "DISTRIBUTE"),
          #"SYSTEM_SYSRULES_gridLayoutColumnConfig"(width: "DISTRIBUTE", weight: 2),
          #"SYSTEM_SYSRULES_gridLayoutColumnConfig"(width: "DISTRIBUTE", weight: 2),
          #"SYSTEM_SYSRULES_gridLayoutColumnConfig"(width: "ICON")
        },
        rows: {
          #"SYSTEM_SYSRULES_forEach"(
            items: ri!purchaseRequest.items,
            expression: #"SYSTEM_SYSRULES_gridRowLayout"(
              contents: {
                #"SYSTEM_SYSRULES_textField"(
                  value: fv!item.desc,
                  saveInto: fv!item.desc,
                  required: true,
                  validations: {if(
                    and(not(isnull(fv!item.desc)), len(fv!item.desc) =&gt; 100),
                    "Description must be less than 100 characters",
                    ""
                  )},
                  validationGroup: "main"
                ),
                #"SYSTEM_SYSRULES_dropdownField"(
                  placeholderLabel: "--- Select a Category ---",
                  choiceLabels: local!categories,
                  choiceValues: local!categories,
                  value: fv!item.category,
                  saveInto: fv!item.category,
                  required: true,
                  validationGroup: "main"
                ),
                #"SYSTEM_SYSRULES_integerField"(
                  value: fv!item.qty,
                  saveInto: fv!item.qty,
                  required: true,
                  validations: {if(
                    tointeger(fv!item.qty) &lt; 1,
                    "Quantity must be greater than zero",
                    ""
                  )},
                  validationGroup: "main",
                  align: "RIGHT"
                ),
                #"SYSTEM_SYSRULES_floatingPointField"(
                  value: fv!item.unitPrice,
                  saveInto: fv!item.unitPrice,
                  required: true,
                  validations: {if(
                    todecimal(fv!item.unitPrice) &lt; 0,
                    "Price must be greater than zero",
                    ""
                  )},
                  validationGroup: "main",
                  align: "RIGHT"
                ),
                #"SYSTEM_SYSRULES_textField"(
                  value: dollar(
                    if(
                      or(isnull(fv!item.qty), isnull(fv!item.unitPrice)),
                      0,
                      tointeger(fv!item.qty) * todecimal(fv!item.unitPrice)
                    )
                  ),
                  readOnly: true,
                  align: "RIGHT"
                ),
                #"SYSTEM_SYSRULES_richTextDisplayField"(
                  value: {
                    #"SYSTEM_SYSRULES_richTextIcon"(
                      icon: "times",
                      link: #"SYSTEM_SYSRULES_dynamicLink"(saveInto: {
                        a!save(ri!purchaseRequest.items, remove(ri!purchaseRequest.items, fv!index))
                      }),
                      linkStyle: "STANDALONE",
                      color: "NEGATIVE"
                    )
                  }
                )
              }
            )
          ),
          #"SYSTEM_SYSRULES_gridRowLayout"(
            contents: {
              #"SYSTEM_SYSRULES_textField"(readOnly: true),
              #"SYSTEM_SYSRULES_textField"(readOnly: true),
              #"SYSTEM_SYSRULES_textField"(readOnly: true),
              #"SYSTEM_SYSRULES_textField"(value: "Total", readOnly: true, align: "RIGHT"),
              #"SYSTEM_SYSRULES_textField"(
                value: dollar(sum(#"SYSTEM_SYSRULES_forEach"(
                  items: ri!purchaseRequest.items,
                  expression: tointeger(fv!item.qty) * todecimal(fv!item.unitPrice)
                ))),
                readOnly: true,
                align: "RIGHT"
              ),
              #"SYSTEM_SYSRULES_textField"(readOnly: true)
            }
          )
        },
        addRowLink: #"SYSTEM_SYSRULES_dynamicLink"(
          label: "Add New Item",
          saveInto: {
            a!save(ri!purchaseRequest.items, append(ri!purchaseRequest.items, {desc: "", category: "", qty: null, unitPrice: null}))
          }
        ),
        rowHeader: 1
      )
    },
    buttons: #"SYSTEM_SYSRULES_ButtonLayout"(
      primaryButtons: {
        #"SYSTEM_SYSRULES_ButtonWidget"(
          label: "Submit",
          saveInto: {},
          submit: true,
          style: "PRIMARY",
          /* Prevent form submission while a new address is being configured */
          disabled: local!addingAddress,
          validationGroup: "main"
        )
      },
      secondaryButtons: {
        #"SYSTEM_SYSRULES_ButtonWidget"(
          label: "Cancel",
          value: true,
          saveInto: ri!cancel,
          submit: true,
          validate: false
        )
      }
    )
  )
)</definition>
        <namedTypedValue>
            <name>cancel</name>
            <type>
                <name>boolean</name>
                <namespace>http://www.w3.org/2001/XMLSchema</namespace>
            </type>
        </namedTypedValue>
        <namedTypedValue>
            <name>purchaseRequest</name>
            <type>
                <name>Variant</name>
                <namespace>http://www.appian.com/ae/types/2009</namespace>
            </type>
        </namedTypedValue>
        <preferredEditor>interface</preferredEditor>
        <offlineEnabled>false</offlineEnabled>
    </rule>
    <roleMap public="true">
        <role inherit="true" allowForAll="false" name="readers">
            <users/>
            <groups/>
        </role>
        <role inherit="true" allowForAll="false" name="authors">
            <users/>
            <groups/>
        </role>
        <role inherit="true" allowForAll="false" name="administrators">
            <users/>
            <groups/>
        </role>
        <role inherit="false" allowForAll="false" name="denyReaders">
            <users/>
            <groups/>
        </role>
        <role inherit="false" allowForAll="false" name="denyAuthors">
            <users/>
            <groups/>
        </role>
        <role inherit="false" allowForAll="false" name="denyAdministrators">
            <users/>
            <groups/>
        </role>
    </roleMap>
    <typedValue>
        <type>
            <name>RuleTestConfig?list</name>
            <namespace>http://www.appian.com/ae/types/2009</namespace>
        </type>
        <value>
            <el>
                <a:name/>
                <a:ruleInputTestConfigs>
                    <a:value xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:nil="true" xsi:type="xsd:boolean"/>
                    <a:nameRef>cancel</a:nameRef>
                    <a:id/>
                </a:ruleInputTestConfigs>
                <a:ruleInputTestConfigs>
                    <a:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="a:Expression">/* This input would normally be a    *
 * list of CDT rather than Any Type, *
 * and be retrieved with a rule like *
 * rule!getPurchaseRequestById(acp!id). */
{
  requestedBy: loggedInUser(),
  /* This would normally be either  *
   * a nested lookup CDT, a foreign *
   * key, or a group id - not text. */
  department: "Sales",
  dueDate: today() + 7,
  specialInstructions: "",
  address: {id: 1, shippingAddress: "123 Main St", unit: "", city: "Springfield", stateOrProvince: "AL", zipCode: "36784"},
  items: {
    /* Like the department parameter above, category here would not normally be text. */
    {desc: "ballpoint pens, box of 12", category: "Office Supplies", qty: 10, unitPrice: 2.55},
    {desc: "color printer", category: "Office Supplies", qty: 1, unitPrice: 123.52}
  }
}</a:value>
                    <a:nameRef>purchaseRequest</a:nameRef>
                    <a:id/>
                </a:ruleInputTestConfigs>
                <a:assertions xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:nil="true"/>
            </el>
        </value>
    </typedValue>
    <history>
        <historyInfo versionUuid="_a-0000e347-b72b-8000-9ba2-011c48011c48_29281"/>
    </history>
</contentHaul>
